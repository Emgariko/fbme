<?xml version="1.0" encoding="UTF-8"?>  
<section xmlns="http://docbook.org/ns/docbook"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <author>
       <personname>
          <firstname></firstname>
          <surname></surname>
       </personname>
       <email></email>
    </author>
    <abstract><wysiwyg_a><p>This function block is internally used for symlink connections solely in Hardware CATs.</p><p /><p>It is a generic block and can be defined with 1 to 16 inputs. Each input datatype can be defined independently. (More information about generic blocks: Studio help (press F1) at Solution→Distributed PAC Project→Editors→System Editor)</p><p>It provides a data queue, to appropriate data (up to the defined maximum capacity) whithout having to wait for proper initialization of the corresponding SYMLINKQUEDST. The receiver function block SYMLINKMULTIQUEDST has to fetch the transmitted data on its own request.</p><p>All value input channels of the FB are assigned with the path name of this block.</p><p>Only one SYMLINKMULTIQUESRC and one SYMLINKMULTIQUEDST have to work together. If there were several ...SRC or ...DST blocks there is no way to define which block fetches which value out of the data queue.</p><p /><p><strong>Please note:</strong> The maximum capacity of the queue can be defined (see 'REQ'-Event input). If the specified limit has to be adjusted, it should be regarded, that the limit should keep an application from using up all memory of the device. Consequently, the sum of all entries in all queue FBs at any time must not exceed the limit of your device memory.</p><p /><p /><p>
  </p></wysiwyg_a></abstract>
  </info>
<wysiwyg><p>
    <strong>Temporal Behavior</strong> </p><p> 'INIT'-Event input:</p><p>- Performs the initialization and captures the 'QI'-input. </p><p>- - If 'QI' is TRUE the function block is initialized and ready to work, 'QO' is TRUE.</p><p>- - If 'QI' is FALSE the function block is deinitialized, 'QO' is false.</p><p>- Each 'INIT' causes an 'INITO'-event.</p><p> </p><p /><p> 'REQ'-Event input:</p><p>- Produces a 'CNF'-event, if the function block is initialized (even if the data queue is already full).</p><p>- After proper initialization each 'REQ'-event causes the block to store the current data of the 'VALUEn'-channnels into the data queue, without having to wait for proper initialization of the corresponding SYMLINKQUEDST until the defined maximum capacity limit of the queue has been reached. Data that arrives while the queue is already full will be dropped until the corresponding SYMLINKMULTIQUEDST requests data and the queue gets empty space again.</p><p>- The maximum capacity range can be defined from 5 to 2000, default setting is 128. (The procedure how to set the value is described in the studio help at <em>Solution</em>→<em>Distributed PAC Project</em>→<em>Symbolic Links</em>.)</p><p>- Data that is arriving at the 'VALUEn'-inputs of the SYMLINKQUESRC, <u>after</u> the data queue is already full, will get lost. So be careful to ensure, that the data queue is emptied fast enough and does not overflow, but consider, that the max. capacity has to be small enough to prevent the application from using up all memory (particularly with the use of several SYMLINKMULTIQUESRC function blocks in the same device).</p><p> </p><p /><p> 'INITO'-Event output:</p><p>- This event is fired when the 'INIT'-Event has been processed (successfully or not).</p><p> </p><p /><p> 'CNF'-Event output:</p><p>- This event is fired after each 'REQ'-event, only if the function block is initialized properly. It is also fired after each 'REQ'-event while the queue is filled up already.</p><p> </p><p /><p><strong>Functional Behavior</strong> </p><p /><p> 'QI'-input:</p><p>- If the value is TRUE an initialization is performed, else: the function block will be deinitialized with an INIT-event.</p><p> </p><p> 'NAME'-input:</p><p>- Path name, has to be equal at the corresponding SYMLINKMULTIVARDST 'NAME'-input. (i.e.: ${PATH}HW_pump1)</p><p>- To connect HW IOs with process values it is necessary to use the prefix '${PATH}' in the path name.</p><p> </p><p> 'VALUEn'-input:</p><p>- Value to be sent to data queue from where the corresponding SYMLINKMULTIQUEDST will fetch it. Datatype can be defined within the interface editor.</p><p> </p><p> 'QO'-output:</p><p>- TRUE if the function block is initialized, FALSE if not.</p><p> </p><p> 'STATUS'-output:</p><p>- Indicates the status of the function block.</p><p>- Possible status codes of 'STATUS'-output:</p><p>      OK                  &lt; status OK &gt;</p><p>      NTF_IVAL        &lt; success, inital values set notification &gt;</p><p> </p><p>- Possible error codes of 'STATUS'-output:<br />      ERR_MEM        &lt; out of memory &gt;</p><p>      ERR_SIZE        &lt; illegal size spezification &gt;</p><p>      ERR_PARAM     &lt; parameterization error (empty name or size of zero) &gt;</p><p>      ERR_INDEX      &lt; index value out of range &gt;</p><p>      ERR_NOVALUE &lt; no input value where an output variable is given &gt;</p><p>      ERR_CONV       &lt; conversion of this type not allowed (not possible) &gt;</p><p>      ERR_RANGE     &lt; conversion possible but value has changed &gt;</p><p>      ERR_UNDEF     &lt; no queue with the given name defined &gt;</p><p>      ERR_MDEF       &lt; multiple destination queue FBs defined &gt;</p><p>      ERR_QUEMPTY &lt; queue currently empty &gt;</p><p>      ERR_QUFULL    &lt; the queue is full &gt;</p><p>      ERR_NORECV   &lt; the queue is full and there is nobody to read &gt;</p><p>      ERR_VARCNT   &lt; incorrect number of variables &gt;</p><p /><p /><p /><p /><p /><p>
  </p></wysiwyg></section>

