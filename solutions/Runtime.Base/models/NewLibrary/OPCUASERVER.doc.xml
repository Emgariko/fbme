<?xml version="1.0" encoding="UTF-8"?>  
<section xmlns="http://docbook.org/ns/docbook"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <author>
       <personname>
          <firstname></firstname>
          <surname></surname>
       </personname>
       <email></email>
    </author>
    <abstract><wysiwyg_a><p>This function block is internally used for OPC UA access.</p><p>It represents the server for the OPC UA connection.</p><p>
    <strong>Attention:</strong> The OPCUASERVER functionality has to be enabled within the configuration, because it is disabled per default to save memory when OPCUASERVER is not in use. There is a 'main switch' to enable the functionality of OPCUASERVER. If OPCUASERVER is used in a project but disabled, a log message will be written.</p><p>
    <strong>Procedure</strong> to enable OPCUASERVER: Open the device list and select the relevant device. Now set the following nodes within the properties of the device in the right part of the list to <em>OVERWRITE</em> and open them: <em>Configuration</em> → <em>FB</em> → <em>OPCUASERVER</em>. Then set <em>Enable</em> to True. (More information can be found in studio help: main menu <em>Help</em> → <em>Help</em> at item Device List (click in the device list on an empty row, to be sure nothing is selected, and press F1 / or if you want to open the page manually: Solution→Distributed PAC Project→Editors→System Editor→Device List))</p><p>
  </p><p>
  </p></wysiwyg_a></abstract>
  </info>
<wysiwyg><p>
    <strong>Temporal Behavior</strong> </p><p>'INIT'-Event input:</p><p>Performs the initialization and captures the QI-input</p><p> -If input 'QI' is TRUE the initialization of the block can happen</p><p>  'QO' is set to TRUE</p><p>  'INITO' is fired</p><p> -If input 'QI' is FALSE the block will be deinitialized</p><p>  'QO' is set to FALSE</p><p>  'INITO' is fired</p><p> </p><p>'COMM'-Event Input:</p><p> -Internally used, leave unconnected</p><p> </p><p>'INITO'-Event Output:</p><p> -is fired after each triggered 'INIT'</p><p> </p><p>
    <strong>Functional Behavior</strong>
  </p><p>'QI'-input:</p><p> -If TRUE, function block can be initialized.</p><p> -If set FALSE the block will be deinitialized.</p><p> </p><p>'MGR_ID'-input:</p><p> -The OPC UA-port and IP address, default: 0.0.0.0:4840, adapt it if necessary</p><p> </p><p>'SRVCERT'-input:</p><p>-Communication between UA-server (this function block) and UA-client can be secured optionally by the use of certificates. A certificate for the OPC UA connection can be specified here. The default setting is uaserver.der. Until now only this certificate is provided. The certificate key has to be copied to the same path of the CF-card where the boot project is stored. (linux: ./var/lib/nxtRT61499F/boot or RT Target: ./boot)</p><p>-If this constant has not been set or the file of the specified certificate is not readable, the built-in nxtControl certificate will be used when the OPC UA client connects and a warning like this will be generated in the log: </p><pre class="wiki">Cannot open certificate file: C:\Users\nxtUser.NXTCONTROL\AppData\Local\nxtControl\nxtONE-2.0\nxtRT61499F\boot\uaserver.der, using builtin one</pre><p> </p><p> </p><p>'QO'-output:</p><p>-Shows True if initialized and communication works</p><p>-Sows False if deinitialized or an error has occurred</p><p> </p><p>'STATUS'-output:</p><p>-Shows status information (OK,TERMINATED, etc.)</p><p> </p><p>
  </p><p>
</p><p>
  </p><p>
</p><p>
  </p><p>
  </p><p>
  </p></wysiwyg></section>

