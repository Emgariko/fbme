<?xml version="1.0" encoding="UTF-8"?>  
<section xmlns="http://docbook.org/ns/docbook"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <author>
       <personname>
          <firstname></firstname>
          <surname></surname>
       </personname>
       <email></email>
    </author>
    <abstract><wysiwyg_a><p>This function block is used to access a serial IO interface.</p><p>
</p><p /><p>
</p><p /><p>
</p><p /><p>
  </p></wysiwyg_a></abstract>
  </info>
<wysiwyg><p>
    <strong>Temporal Behavior</strong> </p><p>'INIT'-Event input: </p><p>- Captures the 'QI'-input</p><p>- If 'QI' is FALSE then</p><p>  - The FB will be deinitialized</p><p>  - The 'QO'-output is set to TRUE, when deinitializing was successful</p><p>  - 'STATUS'-output is blank, when deinitializing was successful </p><p>  - The 'INITO'-Event is fired</p><p>- If 'QI' is TRUE then</p><p>  - The FB is initialized</p><p>  - Captures the STARTCHAR and ENDCHAR parameters</p><p>  - The 'QO'-output is set to TRUE, when initializing was successful </p><p>  - 'STATUS'-output is blank, when initializing was successful </p><p>  - Applies the new settings </p><p>  - The 'INITO'-Event is fired</p><p>- If an error is detected while initializing or deinitializing then</p><p>  - 'QO'-output is set to FALSE</p><p>  - 'STATUS'-output is set to an error message</p><p>  - The 'INITO'-Event is fired</p><p> </p><p>
</p><p>'REQ'-Event input: </p><p>- If 'QI'-input is TRUE and 'INIT' has worked properly:</p><p>   - A triggered 'REQ' performs the sending of data contained at the 'DATAOUT'-input.</p><p>   - The 'CNF'-Event output is fired</p><p>- If 'QI'-input is FALSE and the FB is deinitialized:</p><p>   - 'QO' is set to FALSE</p><p>   - 'STATUS'-output shows an error message (i.e.: REQ invalid in state START)</p><p>   - No data will be sent</p><p>   - The 'CNF'-Event is fired</p><p> </p><p>'ACK'-Event input:</p><p>Has to be triggered to signalize that data from an 'IND'-Event has been processed. If some further data is available, the Function block is ready to accept the next data,  provide it at 'DATAIN'-output and fire 'IND' once more. The very first ACK-Event after INIT is triggered automatically.</p><p>If an 'ACK' is triggered before data is available, the event remains active and works with the next data.</p><p>If an 'ACK' is triggered but the FB is deinitialized, the function block does not react and no 'IND' will be fired. A 'STATUS'-message will be shown when the Function block gets initialized.</p><p> </p><p>
</p><p>'INITO'-Event output:</p><p>This event is fired when the 'INIT'-Event has been processed (successfully or not). </p><p> </p><p>
</p><p>'CNF'-Event output:</p><p>This event is fired when 'REQ'-Event has been processed (successfully or not). </p><p> </p><p>'IND'-Event output:</p><p>This event is fired to signalize that data has arrived and is contained at output DATAIN. Any error will be indicated at QO and STATUS.</p><p>An ACK-Event must have been triggered first, to make the FB ready to accept new data.</p><p> </p><p>
</p><p><strong>Functional Behavior</strong></p><p>'QI'-input:</p><p>If the value is TRUE an initialization is performed, else all existing settings are cleared (deinitialization).</p><p> </p><p>
</p><p>'COM'-input:</p><p>Contains the parameters of the serial connection properties. The properties have to be separated by a single space character.</p><p>They have to be edited in the following order: {dev=name baudrate=bps bits=width stopbits=[1|2] parity=[none|even|odd]}</p><p>(i.e.: dev=COM2 baudrate=9600 bits=8 stopbits=1 parity=none)</p><p>The notation COMx is to be recommended because, by using it in this way, the device name will be converted platform-specific. (i.e. on Beckhoff CX10x0 → COM1: is converted to /dev/ttyS0 with Linux, 0 with RTOS, ...)</p><p> </p><p>
</p><p>'STARTCHAR', 'ENDCHAR':</p><p>
</p><p>This parameters are optional. They can be used for structuring a data stream into sentences, lines or blocks. The parameter value can be 1 to 255 (ASCII-table), which is converted into a data byte. If this parameters are used, they will be attached to each data block which is contained at 'DATAOUT'-input after a 'REQ'-Event. That means each data block will be prefixed with the STARTCHAR character, and the ENDCHAR character gets attached to the end and with this the block is sent. By receiving data, only that part between this marker bytes are valid and will be transferred to 'DATAIN'-output.</p><p>If parameter STARTCHAR is missing, the transfer begins with the next received Byte. If parameter ENDCHAR is missing, the transfer goes on to the last received byte. If both parameters do not exist, data will be transferred to output DATAIN in the same condition as received.</p><p>The functionblock only permits a single marker byte. If it is necessary to get a line-by-line data processing with a line end character sequence &lt;CR&gt;&lt;LF&gt;, as it is usual with Microsoft, the following constraints have to be considered: setting STARTCHAR to 0 (&lt;NULL&gt;) and ENDCHAR to 13 (&lt;CR&gt;). This setting produces data parts with an prefixed &lt;LF&gt; additional character. It would have to be picked out of the received data. To avoid this character the STARTCHAR has to be 10 (&lt;LF&gt;), but by this the very beginning of the datastream must be a &lt;LF&gt; (blank line), otherwise the first data part will get lost.</p><p>The maximum block size is 1KByte (1024Bytes). If the received blocks are longer, they will be separated into blocks of 1K automatically. This means the maximum size of data contained at 'DATAIN'-output is 1024 characters. By this measure the system is prevented to get overloaded by unlimited allocating of data. Also all the subsequent function blocks have a defined record length to work with. After receiving a datablock, and separating it into parts if necessary, all parts of the block will be buffered in a queue within the function block to wait for the subsequent processing. The maximum size of buffered data within the queue is 16K.</p><p> </p><p>'DATAOUT'-input:</p><p>Containes data to be transferred to the connected serial interface when an REQ-Event happens.</p><p> </p><p>
</p><p>'QO'-output:</p><p>Shows the success of initialization or deinitialization. TRUE is successfully initialized or deinitialized, FALSE shows that an error with INIT has occured.</p><p> </p><p>
</p><p>'STATUS'-output:</p><p>When an input event ('INIT'- or 'REQ'-Event) has been successfully processed, this output is set blank.</p><p>It contains the specific error message if an error has occurred.</p><p>
</p><p>
</p><p /><p> </p><p>'DATAIN'-output:</p><p>Containes the datablock ready to be used. An 'IND'-Event will be fired each time when new data is available at this output. An 'ACK'-Event should signalize the end of processing this datablock.</p><p /><p>
</p><p /><p>
  </p></wysiwyg></section>

