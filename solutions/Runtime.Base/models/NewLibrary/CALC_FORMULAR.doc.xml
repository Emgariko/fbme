<?xml version="1.0" encoding="UTF-8"?>  
<section xmlns="http://docbook.org/ns/docbook"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <author>
       <personname>
          <firstname></firstname>
          <surname></surname>
       </personname>
       <email></email>
    </author>
    <abstract><wysiwyg_a><p>This function block evaluates formulas containing mathematical/logical expressions and conditions.</p><p>It is a generic block. The number of inputs 'Xn' can be chosen from 2 to 16 of any numerical type. The number of inputs 'FORMULAm' which are strings containing a formula can be in a range from 2 to 8 which is also the number of outputs 'Ym'. The outputs can be of any numerical types. Input and output types do not depend from each other.</p><p>Pulling the symbol in the bottom right corner of the block up or down changes the number of either inputs or outputs. To change from input-alteration to output-alteration or conversely, just click the symbol in the bottom right corner of the block by a right-click and then choose INCNT or OUTCNT. Afterwards you can alter the selected ports by pulling with left-click again.</p><p>(More information about generic blocks: Studio help (press F1) at Solution→Distributed PAC Project→Editors→System Editor)</p><p>
</p><p /><p>
  </p></wysiwyg_a></abstract>
  </info>
<wysiwyg><p>
    <strong>Temporal Behavior</strong> </p><p>'INIT'-Event input: </p><p>Performs the initialization and compiles the formulas contained in the 'FORMULA1' ... 'FORMULA8' input strings. A syntax check of all formulas is performed starting at 'FORMULA1' ... 'FORMULA8'. On success the 'COMPILESTATUS' ouput is set to OK. In the case when an error is detected, the check stops immediately at the current 'FORMULA' input and the 'COMPILERSTATUS' outputs an error message. The error shall be fixed and the 'INIT-Event fired again to restart the syntax check until all formulas have been compiled successfully.</p><p>On every update of a formula the 'INIT-Event shall be fired. A formula may also be changed during runtime.</p><p>Only when the 'COMPILESTATUS' is OK the 'REQ'-Event will work.</p><p> </p><p>'REQ'-Event input:</p><p>Each triggered 'REQ' executes the internal logic, which means that the input values 'X1' ... 'Xn' are captured and all formulas are evaluated. The results of 'FORMULA1' ... 'FORMULAm' are written to the corresponding outputs 'Y1' ... 'Ym'.</p><p> </p><p>'INITO'-Event output:</p><p>This event is fired when the initialization and compilation of formulas (successfully or not) have been completed. </p><p> </p><p>'CNF'-Event output:</p><p>This event is fired when the evaluation of 'FORMULA1' ... 'FORMULAm' has <u>successfully</u> completed and the outputs 'Y1' ... 'Ym' have been written. The output of 'RUNTIMESTATUS' is set to OK.</p><p> </p><p>'ERR'-Event output:</p><p>This event is fired when the evaluation of 'FORMULA1' ... 'FORMULAm' has <u>not successfully</u> completed because a runtime error (division by zero, etc.) occurred. The output of 'RUNTIMESTATUS' is set to an error message. </p><p>On error no 'CNF'-Event is fired.</p><p> </p><p> </p><p><strong>Functional Behavior</strong></p><p>The following arithmetic expressions are allowed:</p><p>+, -, *, /, Xn%Xm , Xn**Xm, asin(Xn), acos(Xn), atan(Xn), sin(Xn), cos(Xn), tan(Xn), sqrt(Xn), ln(Xn), and brackets() as well as all combinations.</p><p>All trigonometric functions are calculated in radians. The mathematical constants PI, E are also supported.</p><p>Examples for correct syntax: </p><ul>
<li>(X1-2)*5-(X2*(X1+3))+X3/2 </li>
<li>sqrt(X2*X3) </li>
<li>asin(X1) </li>
<li>X1**X3  or X1**4   ...syntax for exponential function (x^y) </li>
<li>X1%3  or X1%X2    ...syntax for modulo operation, it finds the remainder of a division of one number by another (for example: X1=5 divided by 3: the result = remainder would be 2). <u>For this function the datatype has to be INT (UINT, SINT, USINT, DINT, UDINT, LINT, ULINT)!</u></li></ul><p> </p><p>The following logical expressions are allowed:</p><p>AND, OR, XOR, NOT</p><p>Examples:</p><ul>
<li>X4 AND X5 OR NOT X6 </li></ul><p>In this case the output value is either 1 or 0 (TRUE or FALSE if output datatype is BOOL). </p><p> </p><p>The following conditions are allowed:</p><p>&gt; (greater than), &gt;= (greater or equal), = (equal), &lt;&gt; (not equal), &lt;= (less or equal), &lt; (less than)</p><p>Examples:</p><ul>
<li>X1&lt;=X3 </li>
<li>X2&gt;X4 AND X3</li></ul><p>In this case the output value is either 1 or 0 (TRUE or FALSE if output datatype is BOOL). </p><p> </p><p>
</p><p /><p>
  </p></wysiwyg></section>

