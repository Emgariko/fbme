<?xml version="1.0" encoding="UTF-8"?>  
<section xmlns="http://docbook.org/ns/docbook"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <author>
       <personname>
          <firstname></firstname>
          <surname></surname>
       </personname>
       <email></email>
    </author>
    <abstract><wysiwyg_a><p>This function block is used to store data over reboots on fast FRAM.</p><p>It is a generic block. The number of inputs can be chosen from 1 to 32. The number of outputs and default-inputs increase equally. </p><p>The type for each input has to be defined, the type of default and output will change automatically.</p><p>The functionality is the same as with the persistence FB, but it can be used only if the platform is equipped with a FRAM medium, that can be written any number of times (no Write-Cycle limit).</p><p>Note: On a soft-PLC a PERSISTENCE will be mapped additionally to a PERSISTENCE_FRAM, when an existing project is deployed.</p><p>(More information about generic blocks: Studio help (press F1) at Solution→Distributed PAC Project→Editors→System Editor)</p><p /><p>
  </p></wysiwyg_a></abstract>
  </info>
<wysiwyg><p>
    <strong>Temporal Behavior</strong> </p><p>'INIT'-Event input:</p><p>- Performs the initialization</p><p>- Captures the 'QI'-input</p><p>- Fires the 'INITO'-Event</p><p>- If 'QI' is FALSE then </p><p>  - The 'QO'-output is set to FALSE </p><p>  - Any READ or WRITE input event will cause no effect, means nothing will be written or read and also the 'READCNF' and 'WRITECNF' will not be fired</p><p>
</p><p>- If 'QI' is TRUE then</p><p>  - The 'QO'-output is set to TRUE</p><p>  - READ or WRITE input Event executes the internal logic </p><p> </p><p>
</p><p>
</p><p>'READ'-Event input:</p><p>- Causes the reading of stored data (from data file on FRAM memory)</p><p>- 'output(s)' is (are) set</p><p>- Fires 'READCNF'-output Event</p><p> - If no 'WRITE'-Event has happened before</p><p>   - the default values are stored in a data file on FRAM memory</p><p>   - 'defaultsUsed' is set TRUE</p><p> - Else</p><p>   - stored data from data file on FRAM memory is read</p><p>   - 'defaultsUsed is set FALSE</p><p> </p><p>
</p><p>'WRITE'-Event input:</p><p>- performs writing data from input(s) to FRAM memory</p><p>- 'output(s)' are set</p><p>- 'defaultsUsed' is set FALSE</p><p>- fires 'WRITECNF'-output Event</p><p> </p><p>
</p><p>'INITO'-Event output:</p><p>- is fired after every triggered 'INIT'-Event, no matter if the FB is initialized or not</p><p> </p><p>
</p><p>'READCNF'-Event output:</p><p>- is fired after every successfully executed 'READ'-Event</p><p> </p><p>
</p><p>'WRITECNF'-Event output:</p><p>- is fired after every successfully executed 'WRITE'-Event</p><p> </p><p>
</p><p><strong>Functional Behavior</strong></p><p>'QI'-input:</p><p>- If the value is TRUE a triggered 'INIT' performs an initialization, the FB will be ready to work</p><p>- If the value is FALSE a triggered 'INIT' performs a deinitialization, the FB will not react to a READ or WRITE Event</p><p>
</p><p> </p><p>'input(n)':</p><p>- This data will be written to data file when 'WRITE'-Event is triggered</p><p>
</p><p> </p><p>'default(n)'-input:</p><p>- This data will be used if no other data for this FB is available on FRAM memory (by the very first READ when no WRITE has happened)</p><p>
</p><p> </p><p>'QO'-output:</p><p>- Shows the initialization status. TRUE is initialized, FALSE is not initialized.</p><p>
</p><p> </p><p>'STATUS'-output:</p><p>- Containes the specific error message, if an error has occurred</p><p>
</p><p> </p><p>'defaultsUsed'-output:</p><p>- TRUE when default data is used</p><p>- FALSE when stored data from FRAM memory is used</p><p>
</p><p> </p><p>'output':</p><p>- Contains defaults or stored data from FRAM memory</p><p>
</p><p /><p>
</p><p /><p>
</p><p /><p>
</p><p /><p>
  </p></wysiwyg></section>

