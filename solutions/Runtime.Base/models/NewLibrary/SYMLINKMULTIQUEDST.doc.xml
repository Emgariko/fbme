<?xml version="1.0" encoding="UTF-8"?>  
<section xmlns="http://docbook.org/ns/docbook"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <author>
       <personname>
          <firstname></firstname>
          <surname></surname>
       </personname>
       <email></email>
    </author>
    <abstract><wysiwyg_a><p>This function block is internally used for symlink connections solely in Hardware CATs.</p><p /><p>It is a generic block and can be defined with 1 to 16 outputs. Each output datatype can be defined independently. (More information about generic blocks: Studio help (press F1) at Solution→Distributed PAC Project→Editors→System Editor)</p><p>The receiver function block SYMLINKMULTIQUEDST has to fetch the data from the data queue of the corresponding source (SYMLINKMULTIQUESRC) on its own request. </p><p>All value output channels of the FB are assigned with the path name of this block.</p><p>Only one SYMLINKMULTIQUESRC and one SYMLINKMULTIQUEDST have to work together. If there were several ...SRC or ...DST blocks there is no way to define which block fetches which value out of the data queue.</p><p /><p><strong>Please note:</strong> The maximum capacity of the queue can be defined (see 'REQ'-Event input of SYMLINKMULTIQUESRC !). If the specified limit has to be adjusted, it should be regarded, that the limit should keep an application from using up all memory of the device. Consequently, the sum of all entries in all queue FBs at any time must not exceed the limit of your device memory.</p><p /><p /><p>
  </p></wysiwyg_a></abstract>
  </info>
<wysiwyg><p>
    <strong>Temporal Behavior</strong> </p><p> 'INIT'-Event input:</p><p>- Performs the initialization and captures the 'QI'-input. </p><p>- - If 'QI' is TRUE the function block is initialized and ready to work, 'QO' is TRUE.</p><p>- - If 'QI' is FALSE the function block is deinitialized, 'QO' is FALSE.</p><p>- Each 'INIT' causes an 'INITO'-event.</p><p> </p><p /><p> 'REQ'-Event input:</p><p>- Produces a 'CNF'-event, if the function block is initialized and data is available. If the data queue is empty the 'CNF'-event will not be fired, it is fired immediately when data is available from the data queue, without another 'REQ'.</p><p>- After proper initialization a 'REQ'-event should be triggered once. If there is no data in the data queue available the FB is ready-to-receive.</p><p>- Data of the queue counts as fully processed when 'REQ' has been triggered at least once and no data is stored in the queue, that means no 'CNF'-event has followed.</p><p>- When the SYMLINKMULTIQUEDST is ready (a 'REQ' has been triggered without data is provided) and then the corresponding SYMLINKMULTIQUESRC writes ('REQ' of the ...SRC is triggered) the data will be written directly to output(s) 'VALUEn' of the ...SRC and a 'CNF' will be triggered at both, the ...SRC and the ...DST.</p><p>- 'REQ'-events, which are triggered after the data queue is empty and the one ready-to-receive 'REQ' has already been triggered, will cause no effect. This one 'REQ', that brings the FB in ready-to-receive state, will cause fetching the first set of data from the queue as soon as it is available. Further data fetching needs new 'REQ'-events.</p><p> </p><p /><p> 'INITO'-Event output:</p><p>- This event is fired when the 'INIT'-Event has been processed (successfully or not).</p><p>- For correct operation the 'INITO'-Event should be looped back to the 'REQ' of the SYMLINKMULTIQUEDST, after all subsequent FBs have been initialized. This will trigger the first 'REQ' after initializing, that brings the FB in ready-to-receive state as described above at 'REQ'.</p><p> </p><p /><p> 'CNF'-Event output:</p><p>- This event is fired after each 'REQ'-event, only if the function block is initialized properly and when data for processing is available in the data queue.</p><p>- 'REQ'-Events while the data queue is empty does not produce a 'CNF'-Event. In this case the first available value will be fetched immediately from the SYMLINKMULTIQUESRC and the 'CNF'-Event is fired without another 'REQ'-Event. Further data fetching, respectively 'CNF'-Events, need further 'REQ'-Events.</p><p> </p><p /><p><strong>Functional Behavior</strong> </p><p /><p> 'QI'-input:</p><p>- If the value is TRUE an initialization is performed, else: the function block will be deinitialized with an INIT-event.</p><p> </p><p> 'NAME'-input:</p><p>- Path name, has to be equal at the corresponding SYMLINKMULTIQUESRC 'NAME'-input. (i.e.: ${PATH}HW_pump1)</p><p>- To connect HW IOs with process values it is necessary to use the prefix '${PATH}' in the path name.</p><p> </p><p> 'QO'-output:</p><p>- TRUE if the function block is initialized, FALSE if not.</p><p> </p><p> 'STATUS'-output:</p><p>- Indicates the status of the function block.</p><p>- Possible status codes of 'STATUS'-output:</p><p>      OK                  &lt; status OK &gt;</p><p>      NTF_IVAL        &lt; success, inital values set notification &gt;</p><p> </p><p>- Possible error codes of 'STATUS'-output:</p><p>      ERR_MEM        &lt; out of memory &gt;</p><p>      ERR_SIZE        &lt; illegal size spezification &gt;</p><p>      ERR_PARAM     &lt; parameterization error (empty name or size of zero) &gt;</p><p>      ERR_INDEX      &lt; index value out of range &gt;</p><p>      ERR_NOVALUE &lt; no input value where an output variable is given &gt;</p><p>      ERR_CONV       &lt; conversion of this type not allowed (not possible) &gt;</p><p>      ERR_RANGE     &lt; conversion possible but value has changed &gt;</p><p>      ERR_UNDEF     &lt; no queue with the given name defined &gt;</p><p>      ERR_MDEF       &lt; multiple destination queue FBs defined &gt;</p><p>      ERR_QUEMPTY &lt; queue currently empty &gt;</p><p>      ERR_QUFULL    &lt; the queue is full &gt;</p><p>      ERR_NORECV   &lt; the queue is full and there is nobody to read &gt;</p><p>      ERR_VARCNT   &lt; incorrect number of variables &gt;</p><p> </p><p> 'VALUEn'-output:</p><p>- Value that has been fetched from data queue from the corresponding SYMLINKMULTIQUESRC. Datatype can be defined within the interface editor.</p><p> </p><p /><p /><p /><p /><p>
  </p></wysiwyg></section>

